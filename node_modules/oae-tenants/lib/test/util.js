/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var assert = require('assert');
var ShortId = require('shortid');

var RestAPI = require('oae-rest');
var TestsUtil = require('oae-tests');

/**
 * Create test tenant networks
 *
 * @param  {RestContext}    globalAdminRestCtx              The global admin rest context with which to create the tenant networks
 * @param  {Number}         numToCreate                     How many tenant networks to create
 * @param  {Function}       callback                        Invoked when the tenant networks are created
 * @param  {TenantNetwork}  callback.tenantNetwork0         The first tenant network that was created
 * @param  {TenantNetwork}  [callback.tenantNetwork...]     All tenant networks that were created as new callback arguments
 * @throws {AssertionError}                                 Thrown if there is an error creating any of the tenant networks
 */
var generateTestTenantNetworks = module.exports.generateTestTenantNetworks = function(globalAdminRestCtx, numToCreate, callback, _created) {
    _created = _created || [];
    if (_created.length === numToCreate) {
        // Invoke the callback with all the tenant networks created
        return callback.apply(callback, _created);
    }

    // Create a tenant network with a random displayName
    RestAPI.Tenants.createTenantNetwork(globalAdminRestCtx, ShortId.generate(), function(err, tenantNetwork) {
        assert.ok(!err);
        _created.push(tenantNetwork);
        return generateTestTenantNetworks(globalAdminRestCtx, numToCreate, callback, _created);
    });
};

/**
 * Ensure one tenant is equal to another
 *
 * @param  {Tenant}         actual      The tenant to test
 * @param  {Tenant}         expected    The expected tenant object
 * @throws {AssertionError}             Thrown if the actual tenant does not match the expected model
 */
var assertTenantsEqual = module.exports.assertTenantsEqual = function(actual, expected) {
    assert.strictEqual(actual.alias, expected.alias);
    assert.strictEqual(actual.displayName, expected.displayName);
    assert.strictEqual(actual.host, expected.host);
    assert.strictEqual(actual.active, expected.active);
    assert.strictEqual(actual.deleted, expected.deleted);
    assert.strictEqual(actual.isGlobalAdminServer, expected.isGlobalAdminServer);
};
