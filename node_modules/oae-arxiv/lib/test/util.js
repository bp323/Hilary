/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var RestUtil = require('oae-rest/lib/util');

/**
 * Create a new ticket
 *
 * @param  {RestContext}    restCtx             Standard REST Context object that contains the current tenant URL and the current user credentials
 * @param  {Object}         opts                Object containing the request body parameters
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        Error object containing error code and error message
 * @param  {Ticket}         callback.ticket     Object representing the created ticket
 */
var createTicket = module.exports.createTicket = function(restCtx, opts, callback) {
    RestUtil.RestRequest(restCtx, '/api/ticket/create', 'POST', opts, callback);
};

/**
 * Delete a ticket
 *
 * @param  {RestContext}    restCtx             Standard REST Context object that contains the current tenant URL and the current user credentials
 * @param  {String}         ticketId            The ID of the ticket that needs to be deleted
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        Error object containing error code and error message
 */
var deleteTicket = module.exports.deleteTicket = function(restCtx, ticketId, callback) {
    RestUtil.RestRequest(restCtx, '/api/ticket/' + RestUtil.encodeURIComponent(ticketId) + '/delete', 'POST', null, callback);
};

/**
 * Request a ticket
 *
 * @param  {RestContext}    restCtx             Standard REST Context object that contains the current tenant URL and the current user credentials
 * @param  {String}         ticketId            The ID of the ticket that needs to be returned
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        Error object containing error code and error message
 * @param  {Ticket}         callback.ticket     Object representing the requested ticket
 */
var getTicket = module.exports.getTicket = function(restCtx, ticketId, callback) {
    RestUtil.RestRequest(restCtx, '/api/ticket/' + RestUtil.encodeURIComponent(ticketId), 'GET', null, callback);
};

/**
 * Update a ticket
 *
 * @param  {RestContext}    restCtx             Standard REST Context object that contains the current tenant URL and the current user credentials
 * @param  {String}         ticketId            The ID of the ticket that needs to be returned
 * @param  {Object}         opts                Object containing the request body parameters
 * @param  {Function}       callback            Standard callback method
 * @param  {Object}         callback.err        Error object containing error code and error message
 * @param  {Ticket}         callback.ticket     Object representing the requested ticket
 */
var updateTicket = module.exports.updateTicket = function(restCtx, ticketId, opts, callback) {
    RestUtil.RestRequest(restCtx, '/api/ticket/' + RestUtil.encodeURIComponent(ticketId), 'POST', opts, callback);
};
