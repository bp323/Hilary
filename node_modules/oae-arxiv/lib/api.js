/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var _ = require('underscore');
var xml2js = require('xml2js');
var request = require('request');

var Arxiv = require('./model').Arxiv;

var getArxivProfile = module.exports.getArxivProfile = function(ctx, link, callback) {
    _getArxivProfileFromLink(link, function(err, arxivProfile) {
        if (err) {
            return callback(err);
        }

        return callback(null, arxivProfile);
    });
};

var _getArxivProfileFromLink = function(link, callback) {
    var arxivId = link.split('/').pop();

    request('http://export.arxiv.org/api/query?id_list=' + arxivId, function (err, response, body) {
        if (err) {
            return callback({'code': response.statusCode, 'msg': 'Could not retrieve the arxiv profile for this link'});
        }

        xml2js.parseString(body, function(err, data) {
            if (err) {
                return callback({'code': response.statusCode, 'msg': 'Could not parse the arxiv profile XML for this link'});
            }

            var title = data.feed.entry[0].title.toString();
            var version = data.feed.entry[0].link[0].$.href.split(arxivId).pop();
            var author = _.map(data.feed.entry[0].author, function(_author) {
                return _author.name.toString();
            });

            var arxivProfile = new Arxiv(link, title, version, author);

            return callback(null, arxivProfile);
        });
    });
};
